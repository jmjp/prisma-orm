datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  slug      String    @unique
  title     String
  content   Media     @relation(fields: [contentId], references: [id])
  contentId String    @db.ObjectId
  comments  Comment[]
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  comment String
}

model Like {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  User   User?    @relation(fields: [userId], references: [id])
  userId String[] @db.ObjectId
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  username String    @unique
  password String?
  posts    Post[]
  Comment  Comment[]
  Media    Media[]
  Follow   Follow[]
  Like     Like[]
}

model Media {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  fileId       String @db.ObjectId
  name         String
  url          String
  thumbnailUrl String
  user         User   @relation(fields: [userId], references: [id])
  userId       String @db.ObjectId
  Post         Post[]
}

model Follow {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  User   User    @relation(fields: [userId], references: [id])
  userId String[] @db.ObjectId
}
